<
    vec2, vec2
>

<
    #version 330 core
    layout (location = 0) in vec2 aPos;
    layout (location = 1) in vec2 aTexCoord;

    layout (location = 2) in vec2 pos;
    layout (location = 3) in vec2 scale;
    layout (location = 4) in float layer;
    layout (location = 5) in float sprite_id;

    out vec2 TexCoord;

    uniform mat4 itr_projection;
    uniform vec4 itr_camera_location;
    uniform int itr_lowest_layer;
    uniform int itr_highest_layer;
    uniform vec2 itr_sprites;

    void main()
    {  
        vec2 transformed_pos = (aPos * scale) + pos;
        transformed_pos = floor(transformed_pos * 16) / 16;
        vec4 projected_pos = (vec4(transformed_pos, 0, 1.0) - itr_camera_location) * itr_projection;
        
        float depth = -1 * (layer - itr_lowest_layer) / (itr_highest_layer - itr_lowest_layer);

        projected_pos.z = depth;
        gl_Position = projected_pos;

        vec2 unit_sprite = vec2(1, 1) / itr_sprites;
        TexCoord = vec2(mod(sprite_id, itr_sprites.x), (itr_sprites.y - 1) - floor(sprite_id / itr_sprites.x)) * unit_sprite + aTexCoord * unit_sprite;
    }
>

<
    #version 330 core
    out vec4 FragColor;
    in vec2 TexCoord;
    uniform sampler2D inTexture;

    void main()
    {
        vec4 texture_color = texture(inTexture, TexCoord);
        if (texture_color.w == 0.0)
            discard;
        FragColor = texture_color;
    }
>